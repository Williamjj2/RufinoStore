// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário (Criadores)
model User {
  id                      String    @id @default(cuid())
  email                   String    @unique
  password_hash           String
  name                    String
  username                String    @unique
  bio                     String?
  avatar_url              String?
  phone                   String?
  is_active               Boolean   @default(true)
  stripe_account_id       String?
  mercadopago_access_token String?
  created_at              DateTime  @default(now())
  updated_at              DateTime  @updatedAt
  
  // Relacionamentos
  products                Product[]
  sales                   Sale[]
  store_settings          UserStoreSettings?
  
  // Índices para otimização
  @@index([email])
  @@index([username])
  @@index([created_at])
  @@map("users")
}

// Modelo de Produto
model Product {
  id              String    @id @default(cuid())
  user_id         String
  title           String
  description     String?
  price_brl       Decimal?
  price_usd       Decimal?
  file_url        String
  cover_image_url String?
  is_active       Boolean   @default(true)
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  
  // Relacionamentos
  user            User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  sales           Sale[]
  
  // Índices para otimização
  @@index([user_id])
  @@index([is_active])
  @@index([created_at])
  @@map("products")
}

// Modelo de Vendas
model Sale {
  id                String        @id @default(cuid())
  product_id        String
  user_id           String        // vendedor
  buyer_email       String
  buyer_name        String?
  amount            Decimal
  currency          String        // BRL ou USD
  payment_method    String        // stripe ou mercadopago
  payment_status    String        @default("PENDING")
  stripe_payment_id String?
  mp_payment_id     String?
  commission_amount Decimal
  created_at        DateTime      @default(now())
  
  // Relacionamentos
  product           Product       @relation(fields: [product_id], references: [id])
  user              User          @relation(fields: [user_id], references: [id])
  
  // Índices para otimização
  @@index([user_id])
  @@index([product_id])
  @@index([payment_status])
  @@index([created_at])
  @@index([buyer_email])
  @@map("sales")
}

// Status de pagamento como String (SQLite não suporta enums)
// Valores permitidos: "PENDING", "PAID", "FAILED", "REFUNDED"

// Modelo de Configurações de Loja
model UserStoreSettings {
  id               String   @id @default(cuid())
  user_id          String   @unique
  template_id      String   @default("minimal")
  primary_color    String   @default("#000000")
  accent_color     String   @default("#3B82F6")
  background_color String   @default("#FFFFFF")
  custom_css       String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  
  // Relacionamentos
  user             User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  // Índices para otimização
  @@index([user_id])
  @@map("user_store_settings")
}

// Modelo de Administrador
model Admin {
  id            String   @id @default(cuid())
  email         String   @unique
  password_hash String
  name          String
  role          String   @default("owner")
  created_at    DateTime @default(now())
  
  // Índices para otimização
  @@index([email])
  @@map("admins")
} 